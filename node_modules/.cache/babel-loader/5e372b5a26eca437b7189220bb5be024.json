{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandrnazarov/WebstormProjects/syntellect-app/syntellect-app/src/app/controllers/AutocompleteControl.tsx\",\n  _s = $RefreshSig$();\nimport View from '../views/AutocompleteControl';\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AutocompleteControl = props => {\n  _s();\n  const [value, setValue] = useState('');\n  const [arr, setArr] = useState([]);\n  const getSearchCountriesAsync = async e => {\n    await setValue(e.target.value);\n    await props.viewModel.getSearchCountriesAsync(e.target.value);\n    const abc = await props.viewModel.foundCountries();\n    setArr(abc);\n  };\n  console.log(arr);\n  // console.log(props.viewModel.found_countries)\n\n  return /*#__PURE__*/_jsxDEV(View, {\n    value: value\n    // foundCountries={props.viewModel.foundCountriesList}\n    ,\n    foundCountries: props.viewModel.found_countries,\n    getSearchCountriesAsync: getSearchCountriesAsync\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(AutocompleteControl, \"1dmmeCNgmo/AbGvEroPGgcXSfIo=\");\n_c = AutocompleteControl;\nexport default AutocompleteControl;\nvar _c;\n$RefreshReg$(_c, \"AutocompleteControl\");","map":{"version":3,"names":["View","React","useState","AutocompleteControl","props","value","setValue","arr","setArr","getSearchCountriesAsync","e","target","viewModel","abc","foundCountries","console","log","found_countries"],"sources":["/Users/aleksandrnazarov/WebstormProjects/syntellect-app/syntellect-app/src/app/controllers/AutocompleteControl.tsx"],"sourcesContent":["import View from '../views/AutocompleteControl'\nimport {CountryInfo, getCountryByName} from \"../../api/apiService\";\nimport React, {FC, useState} from \"react\";\nimport {ControllerProps} from \"../@types/AutocompleteControl\";\nimport {observer} from \"mobx-react\";\nimport {autocompleteControlViewModel} from \"../view-models/AutocompleteControl\";\n\n\nconst AutocompleteControl: FC<ControllerProps> = (props) => {\n\n  const [value, setValue] = useState<string>('')\n  const [arr, setArr] = useState<CountryInfo[] | undefined>([])\n\n  const getSearchCountriesAsync = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    await setValue(e.target.value)\n    await props.viewModel.getSearchCountriesAsync(e.target.value)\n    const abc = await props.viewModel.foundCountries()\n    setArr(abc)\n  }\n  console.log(arr)\n  // console.log(props.viewModel.found_countries)\n\n\n  return (\n    <View\n      value={value}\n      // foundCountries={props.viewModel.foundCountriesList}\n      foundCountries={props.viewModel.found_countries}\n      getSearchCountriesAsync={getSearchCountriesAsync}\n    />\n  )\n}\n\nexport default AutocompleteControl"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,8BAA8B;AAE/C,OAAOC,KAAK,IAAOC,QAAQ,QAAO,OAAO;AAAC;AAM1C,MAAMC,mBAAwC,GAAIC,KAAK,IAAK;EAAA;EAE1D,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAM,CAACK,GAAG,EAAEC,MAAM,CAAC,GAAGN,QAAQ,CAA4B,EAAE,CAAC;EAE7D,MAAMO,uBAAuB,GAAG,MAAOC,CAAsC,IAAK;IAChF,MAAMJ,QAAQ,CAACI,CAAC,CAACC,MAAM,CAACN,KAAK,CAAC;IAC9B,MAAMD,KAAK,CAACQ,SAAS,CAACH,uBAAuB,CAACC,CAAC,CAACC,MAAM,CAACN,KAAK,CAAC;IAC7D,MAAMQ,GAAG,GAAG,MAAMT,KAAK,CAACQ,SAAS,CAACE,cAAc,EAAE;IAClDN,MAAM,CAACK,GAAG,CAAC;EACb,CAAC;EACDE,OAAO,CAACC,GAAG,CAACT,GAAG,CAAC;EAChB;;EAGA,oBACE,QAAC,IAAI;IACH,KAAK,EAAEF;IACP;IAAA;IACA,cAAc,EAAED,KAAK,CAACQ,SAAS,CAACK,eAAgB;IAChD,uBAAuB,EAAER;EAAwB;IAAA;IAAA;IAAA;EAAA,QACjD;AAEN,CAAC;AAAA,GAvBKN,mBAAwC;AAAA,KAAxCA,mBAAwC;AAyB9C,eAAeA,mBAAmB;AAAA;AAAA"},"metadata":{},"sourceType":"module"}