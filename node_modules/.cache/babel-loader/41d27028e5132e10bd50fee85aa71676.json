{"ast":null,"code":"import countries from \"./countries.json\";\nexport function getCountryByName(countryName) {\n  return new Promise(resolve => {\n    setTimeout(resolve, getRandom(100, 800));\n  }).then(() => {\n    if (typeof countryName !== \"string\" || !countryName) {\n      return [];\n    }\n    const searchText = countryName.toLocaleLowerCase();\n    console.log(searchText);\n    const abc = countries.filter(x => x.name.toLocaleLowerCase().startsWith(searchText) || x.fullName.toLocaleLowerCase().startsWith(searchText));\n    return abc;\n  });\n}\nfunction getRandom(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}","map":{"version":3,"names":["countries","getCountryByName","countryName","Promise","resolve","setTimeout","getRandom","then","searchText","toLocaleLowerCase","console","log","abc","filter","x","name","startsWith","fullName","min","max","Math","floor","random"],"sources":["/Users/aleksandrnazarov/WebstormProjects/syntellect-app/syntellect-app/src/api/apiService.ts"],"sourcesContent":["import countries from \"./countries.json\";\r\n\r\nexport interface CountryInfo {\r\n  name: string;\r\n  fullName: string;\r\n  flag: string;\r\n}\r\n\r\nexport function getCountryByName(countryName: string): Promise<CountryInfo[]> {\r\n  return new Promise((resolve) => {\r\n    setTimeout(resolve, getRandom(100, 800));\r\n  }).then(() => {\r\n    if (typeof countryName !== \"string\" || !countryName) {\r\n      return [];\r\n    }\r\n    const searchText = countryName.toLocaleLowerCase();\r\n    console.log(searchText)\r\n\r\n    const abc = countries.filter(\r\n      (x) =>\r\n        x.name.toLocaleLowerCase().startsWith(searchText) ||\r\n        x.fullName.toLocaleLowerCase().startsWith(searchText)\r\n    );\r\n    return abc\r\n  });\r\n}\r\n\r\nfunction getRandom(min: number, max: number) {\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n"],"mappings":"AAAA,OAAOA,SAAS,MAAM,kBAAkB;AAQxC,OAAO,SAASC,gBAAgB,CAACC,WAAmB,EAA0B;EAC5E,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;IAC9BC,UAAU,CAACD,OAAO,EAAEE,SAAS,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EAC1C,CAAC,CAAC,CAACC,IAAI,CAAC,MAAM;IACZ,IAAI,OAAOL,WAAW,KAAK,QAAQ,IAAI,CAACA,WAAW,EAAE;MACnD,OAAO,EAAE;IACX;IACA,MAAMM,UAAU,GAAGN,WAAW,CAACO,iBAAiB,EAAE;IAClDC,OAAO,CAACC,GAAG,CAACH,UAAU,CAAC;IAEvB,MAAMI,GAAG,GAAGZ,SAAS,CAACa,MAAM,CACzBC,CAAC,IACAA,CAAC,CAACC,IAAI,CAACN,iBAAiB,EAAE,CAACO,UAAU,CAACR,UAAU,CAAC,IACjDM,CAAC,CAACG,QAAQ,CAACR,iBAAiB,EAAE,CAACO,UAAU,CAACR,UAAU,CAAC,CACxD;IACD,OAAOI,GAAG;EACZ,CAAC,CAAC;AACJ;AAEA,SAASN,SAAS,CAACY,GAAW,EAAEC,GAAW,EAAE;EAC3C,OAAOC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,IAAIH,GAAG,GAAGD,GAAG,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG;AAC1D"},"metadata":{},"sourceType":"module"}