{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandrnazarov/WebstormProjects/syntellect-app/syntellect-app/src/app/controllers/AutocompleteControl.tsx\",\n  _s = $RefreshSig$();\nimport View from '../views/AutocompleteControl/AutocompleteControl';\nimport React, { useState } from \"react\";\nimport stylesApp from '../../App.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AutocompleteControl = props => {\n  _s();\n  const [values, setValues] = useState('');\n  const [itemSelection, setItemSelection] = useState({});\n  const [foundCountries, setFoundCountries] = useState([]);\n  const getSearchCountriesAsync = async e => {\n    setValues(e.target.value);\n    console.log(e.target.id);\n    await props.viewModel.getSearchCountriesAsync(e.target.value);\n    const result = props.viewModel.foundCountries();\n    setFoundCountries(result);\n  };\n  const onHandleSelection = item => {\n    setValues('');\n    setItemSelection(item);\n  };\n  const onHandleItem = () => {\n    setValues('');\n    setItemSelection({});\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: stylesApp.form,\n    children: [/*#__PURE__*/_jsxDEV(View, {\n      values: values,\n      itemSelection: itemSelection,\n      foundCountries: foundCountries,\n      maxLengthSelect: 3,\n      id: \"1\",\n      onHandleSelection: onHandleSelection,\n      onHandleItem: onHandleItem,\n      getSearchCountriesAsync: getSearchCountriesAsync\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(View, {\n      values: values,\n      itemSelection: itemSelection,\n      foundCountries: foundCountries,\n      maxLengthSelect: 10,\n      id: \"2\",\n      onHandleSelection: onHandleSelection,\n      onHandleItem: onHandleItem,\n      getSearchCountriesAsync: getSearchCountriesAsync\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(AutocompleteControl, \"cVlWJtzJiWjYKc9XyqrdqQgv7uM=\");\n_c = AutocompleteControl;\nexport default AutocompleteControl;\nvar _c;\n$RefreshReg$(_c, \"AutocompleteControl\");","map":{"version":3,"names":["View","React","useState","stylesApp","AutocompleteControl","props","values","setValues","itemSelection","setItemSelection","foundCountries","setFoundCountries","getSearchCountriesAsync","e","target","value","console","log","id","viewModel","result","onHandleSelection","item","onHandleItem","form"],"sources":["/Users/aleksandrnazarov/WebstormProjects/syntellect-app/syntellect-app/src/app/controllers/AutocompleteControl.tsx"],"sourcesContent":["import View from '../views/AutocompleteControl/AutocompleteControl'\nimport {CountryInfo, getCountryByName} from \"../../api/apiService\";\nimport React, {FC, useState} from \"react\";\nimport {ControllerProps} from \"../@types/AutocompleteControl\";\nimport stylesApp from '../../App.module.scss'\n\n\nconst AutocompleteControl: FC<ControllerProps> = (props) => {\n\n  const [values, setValues] = useState<string>('')\n  const [itemSelection, setItemSelection] = useState<CountryInfo>({} as CountryInfo)\n  const [foundCountries, setFoundCountries] = useState<CountryInfo[] | undefined>([])\n\n  const getSearchCountriesAsync = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    setValues(e.target.value)\n    console.log(e.target.id)\n    await props.viewModel.getSearchCountriesAsync(e.target.value)\n    const result = props.viewModel.foundCountries()\n    setFoundCountries(result)\n  }\n\n  const onHandleSelection = (item: CountryInfo) => {\n    setValues('')\n    setItemSelection(item)\n  }\n\n  const onHandleItem = () => {\n    setValues('')\n    setItemSelection({} as CountryInfo)\n  }\n\n  return (\n    <form className={stylesApp.form}>\n      <View\n        values={values}\n        itemSelection={itemSelection}\n        foundCountries={foundCountries}\n        maxLengthSelect={3}\n        id=\"1\"\n        onHandleSelection={onHandleSelection}\n        onHandleItem={onHandleItem}\n        getSearchCountriesAsync={getSearchCountriesAsync}\n      />\n      <View\n        values={values}\n        itemSelection={itemSelection}\n        foundCountries={foundCountries}\n        maxLengthSelect={10}\n        id=\"2\"\n        onHandleSelection={onHandleSelection}\n        onHandleItem={onHandleItem}\n        getSearchCountriesAsync={getSearchCountriesAsync}\n      />\n    </form>\n\n  )\n}\n\nexport default AutocompleteControl"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,kDAAkD;AAEnE,OAAOC,KAAK,IAAOC,QAAQ,QAAO,OAAO;AAEzC,OAAOC,SAAS,MAAM,uBAAuB;AAAA;AAG7C,MAAMC,mBAAwC,GAAIC,KAAK,IAAK;EAAA;EAE1D,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAAS,EAAE,CAAC;EAChD,MAAM,CAACM,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAc,CAAC,CAAC,CAAgB;EAClF,MAAM,CAACQ,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAA4B,EAAE,CAAC;EAEnF,MAAMU,uBAAuB,GAAG,MAAOC,CAAsC,IAAK;IAChFN,SAAS,CAACM,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IACzBC,OAAO,CAACC,GAAG,CAACJ,CAAC,CAACC,MAAM,CAACI,EAAE,CAAC;IACxB,MAAMb,KAAK,CAACc,SAAS,CAACP,uBAAuB,CAACC,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IAC7D,MAAMK,MAAM,GAAGf,KAAK,CAACc,SAAS,CAACT,cAAc,EAAE;IAC/CC,iBAAiB,CAACS,MAAM,CAAC;EAC3B,CAAC;EAED,MAAMC,iBAAiB,GAAIC,IAAiB,IAAK;IAC/Cf,SAAS,CAAC,EAAE,CAAC;IACbE,gBAAgB,CAACa,IAAI,CAAC;EACxB,CAAC;EAED,MAAMC,YAAY,GAAG,MAAM;IACzBhB,SAAS,CAAC,EAAE,CAAC;IACbE,gBAAgB,CAAC,CAAC,CAAC,CAAgB;EACrC,CAAC;EAED,oBACE;IAAM,SAAS,EAAEN,SAAS,CAACqB,IAAK;IAAA,wBAC9B,QAAC,IAAI;MACH,MAAM,EAAElB,MAAO;MACf,aAAa,EAAEE,aAAc;MAC7B,cAAc,EAAEE,cAAe;MAC/B,eAAe,EAAE,CAAE;MACnB,EAAE,EAAC,GAAG;MACN,iBAAiB,EAAEW,iBAAkB;MACrC,YAAY,EAAEE,YAAa;MAC3B,uBAAuB,EAAEX;IAAwB;MAAA;MAAA;MAAA;IAAA,QACjD,eACF,QAAC,IAAI;MACH,MAAM,EAAEN,MAAO;MACf,aAAa,EAAEE,aAAc;MAC7B,cAAc,EAAEE,cAAe;MAC/B,eAAe,EAAE,EAAG;MACpB,EAAE,EAAC,GAAG;MACN,iBAAiB,EAAEW,iBAAkB;MACrC,YAAY,EAAEE,YAAa;MAC3B,uBAAuB,EAAEX;IAAwB;MAAA;MAAA;MAAA;IAAA,QACjD;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAGX,CAAC;AAAA,GAjDKR,mBAAwC;AAAA,KAAxCA,mBAAwC;AAmD9C,eAAeA,mBAAmB;AAAA;AAAA"},"metadata":{},"sourceType":"module"}