{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandrnazarov/WebstormProjects/syntellect-app/syntellect-app/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { getCountryByName } from \"./api/apiService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [sortCountries, setSortCountries] = useState([]);\n  const abc = async e => {\n    const countries = await getCountryByName(e.target.value);\n    setSortCountries(countries);\n    console.log(countries);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: abc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, this), sortCountries === null || sortCountries === void 0 ? void 0 : sortCountries.map((el, ind) => {\n      /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: el.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, ind, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 10\n  }, this);\n}\n_s(App, \"0OWDB1i4DP5wxLt+upiC5PgvqzE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","getCountryByName","App","sortCountries","setSortCountries","abc","e","countries","target","value","console","log","map","el","ind","name"],"sources":["/Users/aleksandrnazarov/WebstormProjects/syntellect-app/syntellect-app/src/App.tsx"],"sourcesContent":["import React, {useState} from \"react\";\nimport \"./App.css\";\nimport countries from \"./api/countries.json\";\nimport {CountryInfo, getCountryByName} from \"./api/apiService\";\n\nfunction App() {\n\n  const [sortCountries, setSortCountries] = useState<CountryInfo[]>([])\n\n  const abc = async (e: any) => {\n    const countries = await getCountryByName(e.target.value)\n    setSortCountries(countries)\n    console.log(countries)\n  }\n\n  return <div>\n    <input type=\"text\" onChange={abc}/>\n    {\n      sortCountries?.map((el, ind) => {\n        <div key={ind}>\n          <p>{el.name}</p>\n        </div>\n      })\n    }\n  </div>;\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAO,WAAW;AAElB,SAAqBC,gBAAgB,QAAO,kBAAkB;AAAC;AAE/D,SAASC,GAAG,GAAG;EAAA;EAEb,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGJ,QAAQ,CAAgB,EAAE,CAAC;EAErE,MAAMK,GAAG,GAAG,MAAOC,CAAM,IAAK;IAC5B,MAAMC,SAAS,GAAG,MAAMN,gBAAgB,CAACK,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC;IACxDL,gBAAgB,CAACG,SAAS,CAAC;IAC3BG,OAAO,CAACC,GAAG,CAACJ,SAAS,CAAC;EACxB,CAAC;EAED,oBAAO;IAAA,wBACL;MAAO,IAAI,EAAC,MAAM;MAAC,QAAQ,EAAEF;IAAI;MAAA;MAAA;MAAA;IAAA,QAAE,EAEjCF,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAES,GAAG,CAAC,CAACC,EAAE,EAAEC,GAAG,KAAK;MAC9B;QAAA,uBACE;UAAA,UAAID,EAAE,CAACE;QAAI;UAAA;UAAA;UAAA;QAAA;MAAK,GADRD,GAAG;QAAA;QAAA;QAAA;MAAA,QAEP;IACR,CAAC,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QAEA;AACR;AAAC,GApBQZ,GAAG;AAAA,KAAHA,GAAG;AAsBZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}