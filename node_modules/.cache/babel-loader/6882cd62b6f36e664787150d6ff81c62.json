{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandrnazarov/WebstormProjects/syntellect-app/syntellect-app/src/app/controllers/AutocompleteControl.tsx\",\n  _s = $RefreshSig$();\nimport View from '../views/AutocompleteControl/AutocompleteControl';\nimport React, { useState } from \"react\";\nimport stylesApp from '../../App.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AutocompleteControl = props => {\n  _s();\n  const [inputValues, setInputValues] = useState({\n    input_1: '',\n    input_2: ''\n  });\n  // console.log(inputValues)\n  const [itemSelection, setItemSelection] = useState({});\n  const [foundCountries, setFoundCountries] = useState([]);\n  const getSearchCountriesAsync = async e => {\n    const id = e.currentTarget.id;\n    const value = e.target.value;\n    setInputValues({\n      ...inputValues,\n      [`input_${id}`]: value\n    });\n    await props.viewModel.getSearchCountriesAsync(e.target.value);\n    const result = props.viewModel.foundCountries();\n    setFoundCountries(result);\n  };\n  const onHandleSelection = item => {\n    // setValues('')\n    // setItemSelection(item)\n  };\n  const onHandleItem = () => {\n    // setValues('')\n    // setItemSelection({} as CountryInfo)\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: stylesApp.form,\n    children: [/*#__PURE__*/_jsxDEV(View, {\n      values: inputValues.input_1,\n      itemSelection: itemSelection.input_1,\n      foundCountries: foundCountries,\n      maxLengthSelect: 3,\n      id: \"1\",\n      onHandleSelection: onHandleSelection,\n      onHandleItem: onHandleItem,\n      getSearchCountriesAsync: getSearchCountriesAsync\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(View, {\n      values: inputValues.input_2,\n      itemSelection: itemSelection.input_2,\n      foundCountries: foundCountries,\n      maxLengthSelect: 10,\n      id: \"2\",\n      onHandleSelection: onHandleSelection,\n      onHandleItem: onHandleItem,\n      getSearchCountriesAsync: getSearchCountriesAsync\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(AutocompleteControl, \"vIy7ppzsxc4gYtQ/2FYcgA2fYNw=\");\n_c = AutocompleteControl;\nexport default AutocompleteControl;\nvar _c;\n$RefreshReg$(_c, \"AutocompleteControl\");","map":{"version":3,"names":["View","React","useState","stylesApp","AutocompleteControl","props","inputValues","setInputValues","input_1","input_2","itemSelection","setItemSelection","foundCountries","setFoundCountries","getSearchCountriesAsync","e","id","currentTarget","value","target","viewModel","result","onHandleSelection","item","onHandleItem","form"],"sources":["/Users/aleksandrnazarov/WebstormProjects/syntellect-app/syntellect-app/src/app/controllers/AutocompleteControl.tsx"],"sourcesContent":["import View from '../views/AutocompleteControl/AutocompleteControl'\nimport {CountryInfo, getCountryByName} from \"../../api/apiService\";\nimport React, {FC, useState} from \"react\";\nimport {ControllerProps, InputStateType, ItemSelectionType} from \"../@types/AutocompleteControl\";\nimport stylesApp from '../../App.module.scss'\n\n\nconst AutocompleteControl: FC<ControllerProps> = (props) => {\n\n  const [inputValues, setInputValues] = useState<InputStateType>({\n    input_1: '',\n    input_2: ''\n  })\n  // console.log(inputValues)\n  const [itemSelection, setItemSelection] = useState<ItemSelectionType>({} as ItemSelectionType)\n  const [foundCountries, setFoundCountries] = useState<CountryInfo[] | undefined>([])\n\n  const getSearchCountriesAsync = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    const id: string = e.currentTarget.id\n    const value: string = e.target.value\n    setInputValues({...inputValues, [`input_${id}`]: value})\n    await props.viewModel.getSearchCountriesAsync(e.target.value)\n    const result = props.viewModel.foundCountries()\n    setFoundCountries(result)\n  }\n\n  const onHandleSelection = (item: CountryInfo) => {\n    // setValues('')\n    // setItemSelection(item)\n  }\n\n  const onHandleItem = () => {\n    // setValues('')\n    // setItemSelection({} as CountryInfo)\n  }\n\n  return (\n    <form className={stylesApp.form}>\n      <View\n        values={inputValues.input_1}\n        itemSelection={itemSelection.input_1}\n        foundCountries={foundCountries}\n        maxLengthSelect={3}\n        id=\"1\"\n        onHandleSelection={onHandleSelection}\n        onHandleItem={onHandleItem}\n        getSearchCountriesAsync={getSearchCountriesAsync}\n      />\n      <View\n        values={inputValues.input_2}\n        itemSelection={itemSelection.input_2}\n        foundCountries={foundCountries}\n        maxLengthSelect={10}\n        id=\"2\"\n        onHandleSelection={onHandleSelection}\n        onHandleItem={onHandleItem}\n        getSearchCountriesAsync={getSearchCountriesAsync}\n      />\n    </form>\n\n  )\n}\n\nexport default AutocompleteControl"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,kDAAkD;AAEnE,OAAOC,KAAK,IAAOC,QAAQ,QAAO,OAAO;AAEzC,OAAOC,SAAS,MAAM,uBAAuB;AAAA;AAG7C,MAAMC,mBAAwC,GAAIC,KAAK,IAAK;EAAA;EAE1D,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGL,QAAQ,CAAiB;IAC7DM,OAAO,EAAE,EAAE;IACXC,OAAO,EAAE;EACX,CAAC,CAAC;EACF;EACA,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAoB,CAAC,CAAC,CAAsB;EAC9F,MAAM,CAACU,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAA4B,EAAE,CAAC;EAEnF,MAAMY,uBAAuB,GAAG,MAAOC,CAAsC,IAAK;IAChF,MAAMC,EAAU,GAAGD,CAAC,CAACE,aAAa,CAACD,EAAE;IACrC,MAAME,KAAa,GAAGH,CAAC,CAACI,MAAM,CAACD,KAAK;IACpCX,cAAc,CAAC;MAAC,GAAGD,WAAW;MAAE,CAAE,SAAQU,EAAG,EAAC,GAAGE;IAAK,CAAC,CAAC;IACxD,MAAMb,KAAK,CAACe,SAAS,CAACN,uBAAuB,CAACC,CAAC,CAACI,MAAM,CAACD,KAAK,CAAC;IAC7D,MAAMG,MAAM,GAAGhB,KAAK,CAACe,SAAS,CAACR,cAAc,EAAE;IAC/CC,iBAAiB,CAACQ,MAAM,CAAC;EAC3B,CAAC;EAED,MAAMC,iBAAiB,GAAIC,IAAiB,IAAK;IAC/C;IACA;EACF,CAAC;EAED,MAAMC,YAAY,GAAG,MAAM;IACzB;IACA;EACF,CAAC;EAED,oBACE;IAAM,SAAS,EAAErB,SAAS,CAACsB,IAAK;IAAA,wBAC9B,QAAC,IAAI;MACH,MAAM,EAAEnB,WAAW,CAACE,OAAQ;MAC5B,aAAa,EAAEE,aAAa,CAACF,OAAQ;MACrC,cAAc,EAAEI,cAAe;MAC/B,eAAe,EAAE,CAAE;MACnB,EAAE,EAAC,GAAG;MACN,iBAAiB,EAAEU,iBAAkB;MACrC,YAAY,EAAEE,YAAa;MAC3B,uBAAuB,EAAEV;IAAwB;MAAA;MAAA;MAAA;IAAA,QACjD,eACF,QAAC,IAAI;MACH,MAAM,EAAER,WAAW,CAACG,OAAQ;MAC5B,aAAa,EAAEC,aAAa,CAACD,OAAQ;MACrC,cAAc,EAAEG,cAAe;MAC/B,eAAe,EAAE,EAAG;MACpB,EAAE,EAAC,GAAG;MACN,iBAAiB,EAAEU,iBAAkB;MACrC,YAAY,EAAEE,YAAa;MAC3B,uBAAuB,EAAEV;IAAwB;MAAA;MAAA;MAAA;IAAA,QACjD;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAGX,CAAC;AAAA,GAtDKV,mBAAwC;AAAA,KAAxCA,mBAAwC;AAwD9C,eAAeA,mBAAmB;AAAA;AAAA"},"metadata":{},"sourceType":"module"}