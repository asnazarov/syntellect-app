{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandrnazarov/WebstormProjects/syntellect-app/syntellect-app/src/app/controllers/AutocompleteControl.tsx\",\n  _s = $RefreshSig$();\nimport View from '../views/AutocompleteControl';\nimport React, { useState } from \"react\";\nimport { observer } from \"mobx-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AutocompleteControl = _s(observer(_c = _s(props => {\n  _s();\n  const [value, setValue] = useState('');\n  const getSearchCountriesAsync = async e => {\n    await setValue(e.target.value);\n    await props.viewModel.getSearchCountriesAsync(e.target.value);\n  };\n  // const abc = props.viewModel.foundCountriesList\n  // console.log(abc)\n  // console.log(props.viewModel.foundCountriesList)\n  return /*#__PURE__*/_jsxDEV(View, {\n    value: value\n    // foundCountries={props.viewModel.foundCountriesList}\n    ,\n    foundCountries: props.viewModel.foundCountriesList,\n    getSearchCountriesAsync: getSearchCountriesAsync\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}, \"A2PXPeq8TepW328gUMM4+o8Xryo=\")), \"A2PXPeq8TepW328gUMM4+o8Xryo=\");\n_c2 = AutocompleteControl;\nexport default AutocompleteControl;\nvar _c, _c2;\n$RefreshReg$(_c, \"AutocompleteControl$observer\");\n$RefreshReg$(_c2, \"AutocompleteControl\");","map":{"version":3,"names":["View","React","useState","observer","AutocompleteControl","props","value","setValue","getSearchCountriesAsync","e","target","viewModel","foundCountriesList"],"sources":["/Users/aleksandrnazarov/WebstormProjects/syntellect-app/syntellect-app/src/app/controllers/AutocompleteControl.tsx"],"sourcesContent":["import View from '../views/AutocompleteControl'\nimport {CountryInfo, getCountryByName} from \"../../api/apiService\";\nimport React, {FC, useState} from \"react\";\nimport {ControllerProps} from \"../@types/AutocompleteControl\";\nimport {observer} from \"mobx-react\";\n\n\nconst AutocompleteControl: FC<ControllerProps> = observer((props) => {\n\n  const [value, setValue] = useState<string>('')\n\n  const getSearchCountriesAsync = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    await setValue(e.target.value)\n    await props.viewModel.getSearchCountriesAsync(e.target.value)\n  }\n  // const abc = props.viewModel.foundCountriesList\n  // console.log(abc)\n  // console.log(props.viewModel.foundCountriesList)\n  return (\n    <View\n      value={value}\n      // foundCountries={props.viewModel.foundCountriesList}\n      foundCountries={props.viewModel.foundCountriesList}\n      getSearchCountriesAsync={getSearchCountriesAsync}\n    />\n  )\n})\n\nexport default AutocompleteControl"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,8BAA8B;AAE/C,OAAOC,KAAK,IAAOC,QAAQ,QAAO,OAAO;AAEzC,SAAQC,QAAQ,QAAO,YAAY;AAAC;AAGpC,MAAMC,mBAAwC,MAAGD,QAAQ,SAAEE,KAAK,IAAK;EAAA;EAEnE,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAS,EAAE,CAAC;EAE9C,MAAMM,uBAAuB,GAAG,MAAOC,CAAsC,IAAK;IAChF,MAAMF,QAAQ,CAACE,CAAC,CAACC,MAAM,CAACJ,KAAK,CAAC;IAC9B,MAAMD,KAAK,CAACM,SAAS,CAACH,uBAAuB,CAACC,CAAC,CAACC,MAAM,CAACJ,KAAK,CAAC;EAC/D,CAAC;EACD;EACA;EACA;EACA,oBACE,QAAC,IAAI;IACH,KAAK,EAAEA;IACP;IAAA;IACA,cAAc,EAAED,KAAK,CAACM,SAAS,CAACC,kBAAmB;IACnD,uBAAuB,EAAEJ;EAAwB;IAAA;IAAA;IAAA;EAAA,QACjD;AAEN,CAAC,kCAAC;AAAA,MAnBIJ,mBAAwC;AAqB9C,eAAeA,mBAAmB;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module"}