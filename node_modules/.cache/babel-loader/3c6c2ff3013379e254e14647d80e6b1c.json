{"ast":null,"code":"import { makeAutoObservable } from 'mobx';\n\n/**\n * The Model is acting as a data source ie. global store\n * for the application. It composes all data from the network\n * layer, databases, services and serve them in a easy way.\n * It shouldn’t have any other logic except one that actually\n * updates a model and doesn’t have any side effects.\n *\n * In cosntructor call `makeAutoObservable(this);`\n *\n * The variables that will contain data will have to be private.\n * To get the content of a variable use a getter (check line 63)\n */\nexport default class CountriesModel {\n  /**\n   * Private variables to store data\n   */\n\n  constructor() {\n    this.names = ['Chardonnay Kendall'];\n    this.asyncAddLoading = false;\n    makeAutoObservable(this);\n  }\n  changeLoadingState(value) {\n    this.asyncAddLoading = value;\n  }\n\n  /**\n   * Setters\n   */\n  addUser(name) {\n    this.names = [...this.names, name];\n  }\n  async getSearchCountriesAsync(name) {\n    // Delay the function with 5s\n    this.changeLoadingState(true);\n    await new Promise(resolve => {\n      setTimeout(resolve, 2000);\n    });\n\n    /**\n     * If you are using an Async function to change the value of a variable\n     * you need to call a non-async function.\n     */\n    this.addUser(name);\n    this.changeLoadingState(false);\n  }\n  removeUser(name) {\n    this.names = this.names.filter(userName => userName !== name);\n  }\n  clearAll() {\n    this.names = [];\n  }\n\n  /**\n   * Getters\n   */\n  get users() {\n    return this.names;\n  }\n  get asyncLoading() {\n    return this.asyncAddLoading;\n  }\n}","map":{"version":3,"names":["makeAutoObservable","CountriesModel","constructor","names","asyncAddLoading","changeLoadingState","value","addUser","name","getSearchCountriesAsync","Promise","resolve","setTimeout","removeUser","filter","userName","clearAll","users","asyncLoading"],"sources":["/Users/aleksandrnazarov/WebstormProjects/syntellect-app/syntellect-app/src/app/models/domian/CountriesModel.tsx"],"sourcesContent":["import { makeAutoObservable } from 'mobx';\n\n/**\n * The Model is acting as a data source ie. global store\n * for the application. It composes all data from the network\n * layer, databases, services and serve them in a easy way.\n * It shouldn’t have any other logic except one that actually\n * updates a model and doesn’t have any side effects.\n *\n * In cosntructor call `makeAutoObservable(this);`\n *\n * The variables that will contain data will have to be private.\n * To get the content of a variable use a getter (check line 63)\n */\nexport default class CountriesModel {\n  /**\n   * Private variables to store data\n   */\n  private names: string[] = ['Chardonnay Kendall'];\n  private asyncAddLoading = false;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  private changeLoadingState(value: boolean) {\n    this.asyncAddLoading = value;\n  }\n\n  /**\n   * Setters\n   */\n  public addUser(name: string) {\n    this.names = [...this.names, name];\n  }\n\n  public async getSearchCountriesAsync(name: string) {\n    // Delay the function with 5s\n    this.changeLoadingState(true);\n    await new Promise((resolve) => {\n      setTimeout(resolve, 2000);\n    });\n\n    /**\n     * If you are using an Async function to change the value of a variable\n     * you need to call a non-async function.\n     */\n    this.addUser(name);\n    this.changeLoadingState(false);\n  }\n\n  public removeUser(name: string) {\n    this.names = this.names.filter((userName) => userName !== name);\n  }\n\n  public clearAll() {\n    this.names = [];\n  }\n\n  /**\n   * Getters\n   */\n  public get users(): string[] {\n    return this.names;\n  }\n\n  public get asyncLoading(): boolean {\n    return this.asyncAddLoading;\n  }\n}\n"],"mappings":"AAAA,SAASA,kBAAkB,QAAQ,MAAM;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAMC,cAAc,CAAC;EAClC;AACF;AACA;;EAIEC,WAAW,GAAG;IAAA,KAHNC,KAAK,GAAa,CAAC,oBAAoB,CAAC;IAAA,KACxCC,eAAe,GAAG,KAAK;IAG7BJ,kBAAkB,CAAC,IAAI,CAAC;EAC1B;EAEQK,kBAAkB,CAACC,KAAc,EAAE;IACzC,IAAI,CAACF,eAAe,GAAGE,KAAK;EAC9B;;EAEA;AACF;AACA;EACSC,OAAO,CAACC,IAAY,EAAE;IAC3B,IAAI,CAACL,KAAK,GAAG,CAAC,GAAG,IAAI,CAACA,KAAK,EAAEK,IAAI,CAAC;EACpC;EAEA,MAAaC,uBAAuB,CAACD,IAAY,EAAE;IACjD;IACA,IAAI,CAACH,kBAAkB,CAAC,IAAI,CAAC;IAC7B,MAAM,IAAIK,OAAO,CAAEC,OAAO,IAAK;MAC7BC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC;IAC3B,CAAC,CAAC;;IAEF;AACJ;AACA;AACA;IACI,IAAI,CAACJ,OAAO,CAACC,IAAI,CAAC;IAClB,IAAI,CAACH,kBAAkB,CAAC,KAAK,CAAC;EAChC;EAEOQ,UAAU,CAACL,IAAY,EAAE;IAC9B,IAAI,CAACL,KAAK,GAAG,IAAI,CAACA,KAAK,CAACW,MAAM,CAAEC,QAAQ,IAAKA,QAAQ,KAAKP,IAAI,CAAC;EACjE;EAEOQ,QAAQ,GAAG;IAChB,IAAI,CAACb,KAAK,GAAG,EAAE;EACjB;;EAEA;AACF;AACA;EACE,IAAWc,KAAK,GAAa;IAC3B,OAAO,IAAI,CAACd,KAAK;EACnB;EAEA,IAAWe,YAAY,GAAY;IACjC,OAAO,IAAI,CAACd,eAAe;EAC7B;AACF"},"metadata":{},"sourceType":"module"}