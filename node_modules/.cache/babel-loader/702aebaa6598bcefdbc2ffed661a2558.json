{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandrnazarov/WebstormProjects/syntellect-app/syntellect-app/src/app/controllers/ButtonControls.tsx\",\n  _s = $RefreshSig$();\nimport Views from '../views/ButtonControls';\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ButtonControls = () => {\n  _s();\n  const [inputValues, setInputValues] = useState({\n    input_1: '',\n    input_2: ''\n  });\n  const onInputClear = e => {\n    const id = e.currentTarget.id;\n    setInputValues({\n      ...inputValues,\n      [`input_${id}`]: ''\n    });\n  };\n  const onInputChange = e => {\n    const id = e.currentTarget.id;\n    const value = e.target.value;\n    setInputValues({\n      ...inputValues,\n      [`input_${id}`]: value\n    });\n  };\n  const onInputDefaultText = e => {\n    const id = e.currentTarget.id;\n    setInputValues({\n      ...inputValues,\n      [`input_${id}`]: 'Hello world!'\n    });\n  };\n  const onAlertText = (e, type) => {\n    const id = e.currentTarget.id;\n    const value = inputValues[`input_${id}`];\n    alert(value);\n  };\n  const onAlertNum = e => {\n    const id = e.currentTarget.id;\n    const value = inputValues[`input_${id}`];\n    if (Number.isInteger(Number(value))) return alert(value);\n  };\n  return /*#__PURE__*/_jsxDEV(Views, {\n    inputValues: inputValues,\n    onInputClear: onInputClear,\n    onInputChange: onInputChange,\n    onInputDefaultText: onInputDefaultText,\n    onAlertNum: onAlertNum,\n    onAlertText: onAlertText\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(ButtonControls, \"3S9pZOut+AiRrNvoIzRTi3H2Gio=\");\n_c = ButtonControls;\nexport default ButtonControls;\nvar _c;\n$RefreshReg$(_c, \"ButtonControls\");","map":{"version":3,"names":["Views","React","useState","ButtonControls","inputValues","setInputValues","input_1","input_2","onInputClear","e","id","currentTarget","onInputChange","value","target","onInputDefaultText","onAlertText","type","alert","onAlertNum","Number","isInteger"],"sources":["/Users/aleksandrnazarov/WebstormProjects/syntellect-app/syntellect-app/src/app/controllers/ButtonControls.tsx"],"sourcesContent":["import Views from '../views/ButtonControls'\nimport React, {useState} from \"react\";\nimport {InputStateType} from \"../@types/ButtonControlsType\";\n\nconst ButtonControls = () => {\n\n  const [inputValues, setInputValues] = useState<InputStateType>({\n    input_1: '',\n    input_2: ''\n  })\n\n  const onInputClear = (e: React.FormEvent<HTMLButtonElement>) => {\n    const id: string = e.currentTarget.id\n    setInputValues({...inputValues, [`input_${id}`]: ''})\n  }\n\n  const onInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const id: string = e.currentTarget.id\n    const value: string = e.target.value\n    setInputValues({...inputValues, [`input_${id}`]: value})\n  }\n\n  const onInputDefaultText = (e: React.FormEvent<HTMLButtonElement>) => {\n    const id: string = e.currentTarget.id\n    setInputValues({...inputValues, [`input_${id}`]: 'Hello world!'})\n  }\n\n  const onAlertText = (e: React.FormEvent<HTMLButtonElement>, type: 'num' | 'text') => {\n    const id: string = e.currentTarget.id\n    const value: string = inputValues[`input_${id}` as keyof InputStateType]\n    alert(value)\n  }\n\n  const onAlertNum = (e: React.FormEvent<HTMLButtonElement>) => {\n    const id: string = e.currentTarget.id\n    const value: string = inputValues[`input_${id}` as keyof InputStateType]\n\n    if (Number.isInteger(Number(value))) return alert(value)\n  }\n\n  return (\n    <Views\n      inputValues={inputValues}\n      onInputClear={onInputClear}\n      onInputChange={onInputChange}\n      onInputDefaultText={onInputDefaultText}\n      onAlertNum={onAlertNum}\n      onAlertText={onAlertText}\n    />\n  )\n}\n\nexport default ButtonControls"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,yBAAyB;AAC3C,OAAOC,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAC;AAGtC,MAAMC,cAAc,GAAG,MAAM;EAAA;EAE3B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGH,QAAQ,CAAiB;IAC7DI,OAAO,EAAE,EAAE;IACXC,OAAO,EAAE;EACX,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAIC,CAAqC,IAAK;IAC9D,MAAMC,EAAU,GAAGD,CAAC,CAACE,aAAa,CAACD,EAAE;IACrCL,cAAc,CAAC;MAAC,GAAGD,WAAW;MAAE,CAAE,SAAQM,EAAG,EAAC,GAAG;IAAE,CAAC,CAAC;EACvD,CAAC;EAED,MAAME,aAAa,GAAIH,CAAsC,IAAK;IAChE,MAAMC,EAAU,GAAGD,CAAC,CAACE,aAAa,CAACD,EAAE;IACrC,MAAMG,KAAa,GAAGJ,CAAC,CAACK,MAAM,CAACD,KAAK;IACpCR,cAAc,CAAC;MAAC,GAAGD,WAAW;MAAE,CAAE,SAAQM,EAAG,EAAC,GAAGG;IAAK,CAAC,CAAC;EAC1D,CAAC;EAED,MAAME,kBAAkB,GAAIN,CAAqC,IAAK;IACpE,MAAMC,EAAU,GAAGD,CAAC,CAACE,aAAa,CAACD,EAAE;IACrCL,cAAc,CAAC;MAAC,GAAGD,WAAW;MAAE,CAAE,SAAQM,EAAG,EAAC,GAAG;IAAc,CAAC,CAAC;EACnE,CAAC;EAED,MAAMM,WAAW,GAAG,CAACP,CAAqC,EAAEQ,IAAoB,KAAK;IACnF,MAAMP,EAAU,GAAGD,CAAC,CAACE,aAAa,CAACD,EAAE;IACrC,MAAMG,KAAa,GAAGT,WAAW,CAAE,SAAQM,EAAG,EAAC,CAAyB;IACxEQ,KAAK,CAACL,KAAK,CAAC;EACd,CAAC;EAED,MAAMM,UAAU,GAAIV,CAAqC,IAAK;IAC5D,MAAMC,EAAU,GAAGD,CAAC,CAACE,aAAa,CAACD,EAAE;IACrC,MAAMG,KAAa,GAAGT,WAAW,CAAE,SAAQM,EAAG,EAAC,CAAyB;IAExE,IAAIU,MAAM,CAACC,SAAS,CAACD,MAAM,CAACP,KAAK,CAAC,CAAC,EAAE,OAAOK,KAAK,CAACL,KAAK,CAAC;EAC1D,CAAC;EAED,oBACE,QAAC,KAAK;IACJ,WAAW,EAAET,WAAY;IACzB,YAAY,EAAEI,YAAa;IAC3B,aAAa,EAAEI,aAAc;IAC7B,kBAAkB,EAAEG,kBAAmB;IACvC,UAAU,EAAEI,UAAW;IACvB,WAAW,EAAEH;EAAY;IAAA;IAAA;IAAA;EAAA,QACzB;AAEN,CAAC;AAAA,GA9CKb,cAAc;AAAA,KAAdA,cAAc;AAgDpB,eAAeA,cAAc;AAAA;AAAA"},"metadata":{},"sourceType":"module"}