{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandrnazarov/WebstormProjects/syntellect-app/syntellect-app/src/components/UI/Button/Button.tsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Button = props => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    disabled: props.disabled,\n    id: props.id,\n    onClick: props.onClick,\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 10\n  }, this);\n};\n_c = Button;\nexport default Button;\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["React","Button","props","disabled","id","onClick","value"],"sources":["/Users/aleksandrnazarov/WebstormProjects/syntellect-app/syntellect-app/src/components/UI/Button/Button.tsx"],"sourcesContent":["import React, {FC} from \"react\";\n\ntype ButtonType = {\n  value: string\n  theme: 'dark' | 'light'\n  id?: string\n  disabled?: boolean\n  onClick: (e: React.FormEvent<HTMLButtonElement>) => void\n}\n\nconst Button: FC<ButtonType> = (props) => {\n\n  return <button type=\"button\" disabled={props.disabled} id={props.id} onClick={props.onClick}>{props.value}</button>\n\n}\n\nexport default Button"],"mappings":";AAAA,OAAOA,KAAK,MAAY,OAAO;AAAC;AAUhC,MAAMC,MAAsB,GAAIC,KAAK,IAAK;EAExC,oBAAO;IAAQ,IAAI,EAAC,QAAQ;IAAC,QAAQ,EAAEA,KAAK,CAACC,QAAS;IAAC,EAAE,EAAED,KAAK,CAACE,EAAG;IAAC,OAAO,EAAEF,KAAK,CAACG,OAAQ;IAAA,UAAEH,KAAK,CAACI;EAAK;IAAA;IAAA;IAAA;EAAA,QAAU;AAErH,CAAC;AAAA,KAJKL,MAAsB;AAM5B,eAAeA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module"}